/*:
 ## Упражнение для приложения — учёт тренировок
 
 >Эти упражнения закрепляют понимание Swift в контексте фитнес-приложения.
 
 Фитнес-приложение не может считаться таковым, если оно не позволяет вести учёт тренировок. Для этого нужна структура, хранящая информацию о каждой тренировке. Для простоты, фокус вашего приложения — на тренировках для бегунов.
 
 Создайте структуру `RunningWorkout`. Она должна содержать переменные свойства `distance` (пройденное расстояние), `time` (потраченное время) и `elevation` (изменение высоты над уровнем моря). Все три свойства по умолчанию должны быть равны 0.0.
 */
struct RunningWorkout{
    var distance = 0.0
    var time = 0.0
    var elevation = 0.0
}

/*:
 Создайте экземпляр переменной типа `RunningWorkout` под именем `firstRun` без передачи каких-либо аргументов. Выведите все три свойства `firstRun`. Это хороший пример, когда значения по умолчанию имеют смысл, так как все тренировки начинаются с пройденного растояния, потраченного времени и изменения высоты, равными 0.
 */
var firstRun = RunningWorkout()
print(firstRun.distance, firstRun.time, firstRun.elevation)

/*:
 Предположим, что во время тренировки, вы пробежали 2396 метра за 15.3 минуты, и поднялись на 94 метра по высоте. Измените значения свойств `firstRun` соответствующим образом. Выведите информацию о вашей тренировке, используя значения каждого из свойств.
 */
firstRun.distance = 2396
firstRun.time = 15.3
firstRun.elevation = 94

print("Вы пробежали \(firstRun.distance) метра за \(firstRun.time) минуты, и поднялись на \(firstRun.elevation) метра по высоте")
//: [Ранее](@previous)  |  страница 2 из 10  |  [Далее: упражнение — дефолтные и пользовательские инициализаторы](@next)
